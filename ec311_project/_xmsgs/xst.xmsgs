<?xml version="1.0" encoding="UTF-8"?>
<!-- IMPORTANT: This is an internal file that has been generated
     by the Xilinx ISE software.  Any direct editing or
     changes made to this file may result in unpredictable
     behavior or data corruption.  It is strongly advised that
     users do not edit the contents of this file. -->
<messages>
<msg type="warning" file="HDLCompiler" num="327" delta="old" >"\\ad\eng\users\h\i\hirokik\Desktop\EC311\project\ec311_project\degital_lock.v" Line 235: Concatenation with unsized literal; will interpret as 32 bits
</msg>

<msg type="warning" file="HDLCompiler" num="327" delta="old" >"\\ad\eng\users\h\i\hirokik\Desktop\EC311\project\ec311_project\degital_lock.v" Line 240: Concatenation with unsized literal; will interpret as 32 bits
</msg>

<msg type="warning" file="HDLCompiler" num="327" delta="old" >"\\ad\eng\users\h\i\hirokik\Desktop\EC311\project\ec311_project\degital_lock.v" Line 245: Concatenation with unsized literal; will interpret as 32 bits
</msg>

<msg type="warning" file="HDLCompiler" num="327" delta="old" >"\\ad\eng\users\h\i\hirokik\Desktop\EC311\project\ec311_project\degital_lock.v" Line 250: Concatenation with unsized literal; will interpret as 32 bits
</msg>

<msg type="warning" file="HDLCompiler" num="327" delta="old" >"\\ad\eng\users\h\i\hirokik\Desktop\EC311\project\ec311_project\degital_lock.v" Line 235: Concatenation with unsized literal; will interpret as 32 bits
</msg>

<msg type="warning" file="HDLCompiler" num="327" delta="old" >"\\ad\eng\users\h\i\hirokik\Desktop\EC311\project\ec311_project\degital_lock.v" Line 240: Concatenation with unsized literal; will interpret as 32 bits
</msg>

<msg type="warning" file="HDLCompiler" num="327" delta="old" >"\\ad\eng\users\h\i\hirokik\Desktop\EC311\project\ec311_project\degital_lock.v" Line 245: Concatenation with unsized literal; will interpret as 32 bits
</msg>

<msg type="warning" file="HDLCompiler" num="327" delta="old" >"\\ad\eng\users\h\i\hirokik\Desktop\EC311\project\ec311_project\degital_lock.v" Line 250: Concatenation with unsized literal; will interpret as 32 bits
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="old" >"\\ad\eng\users\h\i\hirokik\Desktop\EC311\project\ec311_project\clk_divider.v" Line 42: Result of <arg fmt="%d" index="1">29</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">28</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="189" delta="new" >"\\ad\eng\users\h\i\hirokik\Desktop\EC311\project\ec311_project\degital_lock.v" Line 60: Size mismatch in connection of port &lt;<arg fmt="%s" index="3">toggle_value</arg>&gt;. Formal port size is <arg fmt="%d" index="2">28</arg>-bit while actual signal size is <arg fmt="%d" index="1">22</arg>-bit.
</msg>

<msg type="warning" file="HDLCompiler" num="189" delta="new" >"\\ad\eng\users\h\i\hirokik\Desktop\EC311\project\ec311_project\seven_segment.v" Line 46: Size mismatch in connection of port &lt;<arg fmt="%s" index="3">toggle_value</arg>&gt;. Formal port size is <arg fmt="%d" index="2">28</arg>-bit while actual signal size is <arg fmt="%d" index="1">16</arg>-bit.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="old" >"\\ad\eng\users\h\i\hirokik\Desktop\EC311\project\ec311_project\seven_segment.v" Line 50: Result of <arg fmt="%d" index="1">3</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">2</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="634" delta="old" >"\\ad\eng\users\h\i\hirokik\Desktop\EC311\project\ec311_project\seven_segment.v" Line 29: Net &lt;<arg fmt="%s" index="1">rst</arg>&gt; does not have a driver.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="old" >"\\ad\eng\users\h\i\hirokik\Desktop\EC311\project\ec311_project\degital_lock.v" Line 240: Result of <arg fmt="%d" index="1">50</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">20</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="old" >"\\ad\eng\users\h\i\hirokik\Desktop\EC311\project\ec311_project\degital_lock.v" Line 245: Result of <arg fmt="%d" index="1">45</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">20</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="old" >"\\ad\eng\users\h\i\hirokik\Desktop\EC311\project\ec311_project\degital_lock.v" Line 250: Result of <arg fmt="%d" index="1">40</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">20</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="634" delta="old" >"\\ad\eng\users\h\i\hirokik\Desktop\EC311\project\ec311_project\degital_lock.v" Line 42: Net &lt;<arg fmt="%s" index="1">unlocked</arg>&gt; does not have a driver.
</msg>

<msg type="warning" file="Xst" num="653" delta="old" >Signal &lt;<arg fmt="%s" index="1">unlocked</arg>&gt; is used but never assigned. This sourceless signal will be automatically connected to value <arg fmt="%s" index="2">GND</arg>.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">changing</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="653" delta="old" >Signal &lt;<arg fmt="%s" index="1">rst</arg>&gt; is used but never assigned. This sourceless signal will be automatically connected to value <arg fmt="%s" index="2">GND</arg>.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">changing</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">1</arg> in block &lt;<arg fmt="%s" index="3">ASM</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">led_3</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ASM</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">led_4</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ASM</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">led_5</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ASM</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="2404" delta="old" > FFs/Latches &lt;<arg fmt="%s" index="1">led</arg>&lt;<arg fmt="%d" index="2">5</arg>:<arg fmt="%d" index="3">3</arg>&gt;&gt; (without init value) have a constant value of <arg fmt="%c" index="4">0</arg> in block &lt;<arg fmt="%s" index="5">ASM</arg>&gt;.
</msg>

<msg type="info" file="Xst" num="3231" delta="old" >The small RAM &lt;<arg fmt="%s" index="1">Mram_seven_out</arg>&gt; will be implemented on LUTs in order to maximize performance and save block RAM resources. If you want to force its implementation on block, use option/constraint ram_style.
</msg>

<msg type="info" file="Xst" num="3231" delta="old" >The small RAM &lt;<arg fmt="%s" index="1">Mram_count[1]_GND_4_o_wide_mux_2_OUT</arg>&gt; will be implemented on LUTs in order to maximize performance and save block RAM resources. If you want to force its implementation on block, use option/constraint ram_style.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">changing</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">1</arg> in block &lt;<arg fmt="%s" index="3">ASM</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">ssd_9</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ASM</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">ssd_19</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ASM</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">ssd_4</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">ASM</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;ssd_14&gt; </arg>
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">inpassword_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ASM</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">inpassword_3</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ASM</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">inpassword_2</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ASM</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="old" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">inpassword_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">ASM</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="info" file="Xst" num="2169" delta="old" >HDL ADVISOR - Some clock signals were not automatically buffered by XST with BUFG/BUFR resources. Please use the buffer_type constraint in order to insert these buffers to the clock signals to help prevent skew problems.
</msg>

</messages>

